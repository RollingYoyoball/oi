嗯其实是用树状数组优化dp啦，然后用奇妙容斥（算吗？）来搞一下

考虑一个长度为i的非降序列，一定是由原序列删掉了某些数得到的
因此，想要知道方案数，先求出非降序列的长度
dp咯ovo
f[i][j]表示a[i]结尾的长度为j的非降序列的个数
f[i][j]=sum(f[k][j-1])(a[k]<=a[j])
然后就发现可以用树状数组啦ovo
要注意的是，这里需要离散化一下

现在，记g[i]为长度为i的非降序列的个数
那么g[i]=sum(f[j][i])(1<=j<=n)

考虑长度为i的非降序列，枚举它的删除过程可以知道
一个非降序列对于答案的贡献是g[i]*(n-i)!
但是，由于是用组合数算出来的，所以可能会出现当前已经是一个非降序列了的情况
这个时候按题意来说应该停止，但是并没有停止枚举，所以会算多
同时，也可能多算了长度为i+1的序列所会枚举到的情况
因此，只要是可以从i+1转移过来的，不管是合法还是非法，都应该被减去 
每个长度为i+1的序列，都有i+1种方式删掉一个数变成i的序列，然后总共有peng[n-i-1]*g[i+1]个i+1的序列 
